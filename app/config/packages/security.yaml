security:
  encoders:
    App\Entity\User:
      algorithm: auto
  role_hierarchy:
    ROLE_ADMIN:                           ROLE_USER
    ROLE_ADMIN_CANDIDATE:                 ROLE_USER
  # https://symfony.com/doc/current/security.html#where-do-users-come-from-user-providers
  providers:
    # used to reload user from session & other features (e.g. switch_user)
    app_user_provider:
      id: App\Security\UserProvider
  firewalls:
    dev:
      pattern: ^/(_(profiler|wdt)|css|images|js)/
      security: false
    main:
      pattern: ^/
      switch_user: true
      anonymous: true
      provider: app_user_provider
      # This allows the user to login by submitting a username and password
      # Reference: https://symfony.com/doc/current/security/form_login_setup.html
      form_login:
        # The route name that the login form submits to
        check_path: security_login
        # The name of the route where the login form lives
        # When the user tries to access a protected page, they are redirected here
        login_path: security_login
        # Secure the login form against CSRF
        # Reference: https://symfony.com/doc/current/security/csrf_in_login_form.html
        csrf_token_generator: security.csrf.token_manager
        # The page users are redirect to when there is no previous page stored in the
        # session (for example when the users access directly to the login page).
        default_target_path: easyadmin
      logout:
        # The route name the user can go to in order to logout
        path: security_logout
        # The name of the route to redirect to after logging out
        target: security_login
    admin:
      pattern: /admin(.*)
      anonymous: ~
      #http_basic: ~
      provider: app_user_provider
      switch_user: true
      form_login:
        # The route name that the login form submits to
        check_path: security_login
        # The name of the route where the login form lives
        # When the user tries to access a protected page, they are redirected here
        login_path: security_login
        # Secure the login form against CSRF
        # Reference: https://symfony.com/doc/current/security/csrf_in_login_form.html
        csrf_token_generator: security.csrf.token_manager
        # The page users are redirect to when there is no previous page stored in the
        # session (for example when the users access directly to the login page).
        default_target_path: easyadmin
      logout:
        # The route name the user can go to in order to logout
        path: security_logout
        # The name of the route to redirect to after logging out
        target: security_login

      # activate different ways to authenticate
      # https://symfony.com/doc/current/security.html#firewalls-authentication

      # https://symfony.com/doc/current/security/impersonating_user.html
      # switch_user: true

  # Easy way to control access for large sections of your site
  # Note: Only the *first* access control that matches will be used
  access_control:
    - { path: ^/admin, roles: [ROLE_ADMIN,ROLE_ADMIN_CANDIDATE] }
    # - { path: ^/profile, roles: ROLE_USER }
