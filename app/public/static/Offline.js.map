{"version":3,"sources":["webpack:///./node_modules/@babel/runtime/helpers/classCallCheck.js","webpack:///./src/scripts/modules/Offline.js"],"names":["navigator","window","addEventListener","serviceWorker","register","then","registration","console","log","registrationError"],"mappings":";;;;;;;;;AAAA;AACA;AACA;AACA;AACA;;AAEA,iC;;;;;;;;;;;;;;;;ACNe,mEACb,mBAAc;AAAA;;AACZ,MAAI,mBAAmBA,SAAvB,EAAkC;AAChCC,UAAM,CAACC,gBAAP,CAAwB,MAAxB,EAAgC,YAAM;AACpCF,eAAS,CAACG,aAAV,CACGC,QADH,CACY,QADZ,EAEGC,IAFH,CAEQ,UAAAC,YAAY,EAAI;AACpBC,eAAO,CAACC,GAAR,CAAY,iBAAZ,EAA+BF,YAA/B;AACD,OAJH,WAKS,UAAAG,iBAAiB,EAAI;AAC1BF,eAAO,CAACC,GAAR,CAAY,0BAAZ,EAAwCC,iBAAxC;AACD,OAPH;AAQD,KATD;AAUD;AACF,CAdY,EAAf,E","file":"Offline.js","sourcesContent":["function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nmodule.exports = _classCallCheck;","export default new (class Offline {\n  constructor() {\n    if ('serviceWorker' in navigator) {\n      window.addEventListener('load', () => {\n        navigator.serviceWorker\n          .register('/sw.js')\n          .then(registration => {\n            console.log('SW registered: ', registration)\n          })\n          .catch(registrationError => {\n            console.log('SW registration failed: ', registrationError)\n          })\n      })\n    }\n  }\n})()\n"],"sourceRoot":""}